# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class BSTIterator:

    def __init__(self, root: TreeNode):
        self.stack = []
        self.helper(root)

    def next(self) -> int:
        cur_node = self.stack.pop()
        if cur_node.right:
            self.helper(cur_node.right)
        return cur_node.val
            
    def hasNext(self) -> bool:
        return True if self.stack else False
        
    def helper(self, root):
        while root:
            self.stack.append(root)
            root = root.left