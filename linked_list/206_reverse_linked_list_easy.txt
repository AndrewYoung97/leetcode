class Solution:
    ## dummy
    def reverseList(self, head: ListNode) -> ListNode:
        dummy = ListNode(0)
        while head:
            tmp = head.next
            head.next = dummy.next
            dummy.next = head
            head = tmp
        return dummy.next
    
    ## stack
    def reverseList(self, head: ListNode) -> ListNode:
        if not head:
            return None
        stack = []
        while head.next:
            stack.append(head)
            head = head.next
        tmp = head
        while stack:
            cur = stack.pop()
            tmp.next = cur
            tmp = cur
        tmp.next = None
        return head
    
    ## recursive
    def reverseList(self, head: ListNode) -> ListNode:
        if not head:
            return None
        return self._help(head)
    
    def _help(self, node, prev = None):
        if not node:
            return prev
        tmp = node.next
        node.next = prev
        return self._help(tmp, node)
        