class Solution:
    def lengthOfLongestSubstringKDistinct(self, s: str, k: int) -> int:
        if not s or k == 0:
            return 0
        d = {}
        l = r = 0
        cur_max = 1
        while r < len(s):
            d[s[r]] = r
            if len(d.keys()) > k:
                l = min(d.values())
                d.pop(s[l], None)
                l += 1
            cur_max = max(cur_max, r - l + 1)
            r += 1
        return cur_max